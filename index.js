require('dotenv').config();

const express = require('express');
const app = express();

app.get('/', (req, res) => {
  res.send('‚úÖ –ë–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç!');
});

app.listen(3000, () => {
  console.log('üåê Express-—Å–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω –Ω–∞ –ø–æ—Ä—Ç—É 3000');
});

const {
  Client,
  GatewayIntentBits,
  Partials,
  EmbedBuilder,
  ModalBuilder,
  TextInputBuilder,
  TextInputStyle,
  ActionRowBuilder,
  ButtonBuilder,
  ButtonStyle,
  ChannelType,
  PermissionsBitField,
  InteractionType,
  StringSelectMenuBuilder,
  Events
} = require('discord.js');

const dayjs = require('dayjs');
const relativeTime = require('dayjs/plugin/relativeTime');
dayjs.extend(relativeTime);

// === –ñ—ë—Å—Ç–∫–æ –∑–∞—à–∏—Ç—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ ===
const INVITE_CHANNEL_ID = '1387148896320487564'; // –∫–∞–Ω–∞–ª –¥–ª—è –∫–Ω–æ–ø–∫–∏ –∑–∞—è–≤–æ–∫
const LEADER_ROLE_ID = '1200040982746517595';
const DEPUTY_ROLE_ID = '1200045928460058768';
const CHANNEL_LOG_MAIN_ID = '1300952587930959942';
const CHANNEL_LOG_TIER_ID = '1349389519287357470';

// === Discord –∫–ª–∏–µ–Ω—Ç ===
const client = new Client({ intents: [GatewayIntentBits.Guilds] });

client.once(Events.ClientReady, async () => {
  console.log(`ü§ñ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω –∫–∞–∫ ${client.user.tag}`);

  const channel = await client.channels.fetch(INVITE_CHANNEL_ID);
  if (!channel) return console.error('‚ùå –ö–∞–Ω–∞–ª –Ω–µ –Ω–∞–π–¥–µ–Ω');

  const menu = new StringSelectMenuBuilder()
    .setCustomId('application_selector')
    .setPlaceholder('–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø –∑–∞—è–≤–∫–∏')
    .addOptions([
      { label: 'Main', value: 'main', emoji: 'üìù' },
      { label: 'Tier', value: 'tier', emoji: 'üìÇ' }
    ]);

  const row = new ActionRowBuilder().addComponents(menu);

  await channel.send({
    content: '–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø –∑–∞—è–≤–∫–∏:',
    components: [row]
  });
});

client.on(Events.InteractionCreate, async interaction => {
  if (!interaction.isStringSelectMenu() || interaction.customId !== 'application_selector') return;

  const selected = interaction.values[0];
  const leader = `<@&${LEADER_ROLE_ID}>`;
  const deputy = `<@&${DEPUTY_ROLE_ID}>`;
  const userTag = `<@${interaction.user.id}>`;
  const userId = interaction.user.id;
  const date = new Date().toLocaleString('ru-RU');
  const logChannelId = selected === 'main' ? CHANNEL_LOG_MAIN_ID : CHANNEL_LOG_TIER_ID;

  const embed = new EmbedBuilder()
    .setTitle(`–ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞: ${selected.toUpperCase()}`)
    .setColor(selected === 'main' ? 0x5865f2 : 0x9b59b6)
    .setDescription(
      `**–ò–º—è –∏ —Ñ–∞–º–∏–ª–∏—è –≤ –∏–≥—Ä–µ**\n‚Äî\n\n` +
      `**–°—Ç–∞—Ç–∏–∫ –Ω–∞ Phoenix**\n‚Äî\n\n` +
      `**–í–∞—à –ø—Ä–∞–π–º-—Ç–∞–π–º**\n‚Äî\n\n` +
      `**–û—Ç–∫–∞—Ç —Å—Ç—Ä–µ–ª—å–±—ã (–ö–∞—Ä–∞–±–∞)**\n‚Äî\n\n` +
      `**–û—Ç–∫–∞—Ç —Å—Ç—Ä–µ–ª—å–±—ã (–°–∞–π–≥–∞)**\n‚Äî\n\n` +
      `**Discord**\n${userTag}\n\n` +
      `**ID**\n${userId}\n\n` +
      `üìÖ ${date}`
    );

  const logChannel = interaction.guild.channels.cache.get(logChannelId);
  if (logChannel) {
    await logChannel.send({
      content: `${leader} ${deputy}`,
      embeds: [embed]
    });
  }

  await interaction.reply({ content: `‚úÖ –ó–∞—è–≤–∫–∞ –≤ ${selected.toUpperCase()} –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞!`, ephemeral: true });
});

client.login(process.env.TOKEN);

